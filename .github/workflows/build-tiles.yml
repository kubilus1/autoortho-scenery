name: Build one .zip (and upload) (sub-workflow)

on:
  workflow_call:
    inputs:
      zip:
        required: true
        type: string
      setname:
        required: true
        type: string
      relname:
        type: string
        default: ""
    outputs:
      done:
        description: "Did this complete?"
        value: ${{ jobs.build.outputs.done }}

jobs:
  build:
    env:
      DEBIAN_FRONTEND: noninteractive
      TZ: America/NewYork
      GH_TOKEN: ${{ github.token }}

    runs-on: ubuntu-22.04

    outputs:
      done: ${{ steps.build.outputs.done }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install reqs
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip python3-tk zip libgeos-dev
          python3 -m pip install -r requirements.txt
          make --version
      
      - name: Test
        run: |
          TILENAME=${{ inputs.setname }} make -f Makefile.tiles ${{ inputs.setname }}_tile_list_chunks
          TILENAME=${{ inputs.setname }} make -n -f Makefile.tiles ${{ inputs.zip }}

      - name: Build
        id: build
        run: |
          TILENAME=${{ inputs.setname }} make -f Makefile.tiles ${{ inputs.setname }}_tile_list_chunks
          TILENAME=${{ inputs.setname }} timeout 300m make -f Makefile.tiles ${{ inputs.zip }}.info && echo "done=true" >> "$GITHUB_OUTPUT" || echo "done=false" >> "$GITHUB_OUTPUT"
          TILENAME=${{ inputs.tileset }} make -f Makefile.tiles ${{ inputs.zip }}.sha256
          
      - name: Show work
        if: steps.build.outputs.done == 'true'
        run: |
          echo '### ${{ inputs.tileset }} : ${{ inputs.zip }}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          #unzip -l ${{ inputs.zip }} *.dsf >> $GITHUB_STEP_SUMMARY
          echo "COMPLETED?: ${{ steps.build.outputs.done }}" >> $GITHUB_STEP_SUMMARY
          TILENAME=${{ inputs.setname }} make -f Makefile.tiles ${{ inputs.zip }}.info >>  $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '---' >> $GITHUB_STEP_SUMMARY

      - name: Release
        if: steps.build.outputs.done == 'true' && inputs.relname != ''
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ inputs.zip }}
            ${{ inputs.zip }}.sha256
          tag_name: ${{ inputs.relname }}

      - name: Tar
        if: steps.build.outputs.done == 'false'
        run: |
          tar -czvf o4xp.tgz ./Ortho4XP

      - name: Incomplete
        if: steps.build.outputs.done == 'false'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.zip }}
          path: ./o4xp.tgz
          retention-days: 2

  rerun:
    if: needs.build.outputs.done == 'false'
    needs: build
    runs-on: ubuntu-22.04
    env:
      DEBIAN_FRONTEND: noninteractive
      TZ: America/NewYork
      GH_TOKEN: ${{ github.token }}
    
    outputs:
      done: ${{ steps.rebuild.outputs.done }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install reqs
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip python3-tk zip libgeos-dev
          python3 -m pip install -r requirements.txt
          make --version
      
      - name: Restore artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.zip }}

      - name: Untar
        run: |
          tar -xvzf o4xp.tgz
          ls

      - name: ReBuild1
        id: rebuild
        run: |
          TILENAME=${{ inputs.setname }} make -f Makefile.tiles ${{ inputs.setname }}_tile_list_chunks
          TILENAME=${{ inputs.setname }} timeout 300m make -f Makefile.tiles ${{ inputs.zip }}.info && echo "done=true" >> "$GITHUB_OUTPUT" || echo "done=false" >> "$GITHUB_OUTPUT"
          TILENAME=${{ inputs.tileset }} make -f Makefile.tiles ${{ inputs.zip }}.sha256
          
      - name: Show work
        if: steps.rebuild.outputs.done == 'true'
        run: |
          echo '### ${{ inputs.tileset }} : ${{ inputs.zip }}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          #unzip -l ${{ inputs.zip }} *.dsf >> $GITHUB_STEP_SUMMARY
          echo "COMPLETED?: ${{ steps.rebuild.outputs.done }}" >> $GITHUB_STEP_SUMMARY
          TILENAME=${{ inputs.setname }} make -f Makefile.tiles ${{ inputs.zip }}.info >>  $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '---' >> $GITHUB_STEP_SUMMARY

      - name: Release
        if: steps.rebuild.outputs.done == 'true' && inputs.relname != ''
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ inputs.zip }}
            ${{ inputs.zip }}.sha256
          tag_name: ${{ inputs.relname }}

      - name: Tar
        if: steps.rebuild.outputs.done == 'false'
        run: |
          tar -czvf o4xp.tgz ./Ortho4XP

      - name: Incomplete
        if: steps.rebuild.outputs.done == 'false'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.zip }}
          path: ./o4xp.tgz
          retention-days: 2

  rerun2:
    if: needs.rebuild.outputs.done == 'false'
    needs: rerun
    runs-on: ubuntu-22.04
    env:
      DEBIAN_FRONTEND: noninteractive
      TZ: America/NewYork
      GH_TOKEN: ${{ github.token }}
    
    outputs:
      done: ${{ steps.rebuild.outputs.done }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install reqs
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip python3-tk zip libgeos-dev
          python3 -m pip install -r requirements.txt
          make --version
      
      - name: Restore artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.zip }}

      - name: Untar
        run: |
          tar -xvzf o4xp.tgz
          ls

      - name: ReBuild2
        id: rebuild
        run: |
          TILENAME=${{ inputs.setname }} make -f Makefile.tiles ${{ inputs.setname }}_tile_list_chunks
          TILENAME=${{ inputs.setname }} timeout 300m make -f Makefile.tiles ${{ inputs.zip }}.info && echo "done=true" >> "$GITHUB_OUTPUT" || echo "done=false" >> "$GITHUB_OUTPUT"
          TILENAME=${{ inputs.tileset }} make -f Makefile.tiles ${{ inputs.zip }}.sha256
          
      - name: Show work
        if: steps.rebuild.outputs.done == 'true'
        run: |
          echo '### ${{ inputs.tileset }} : ${{ inputs.zip }}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          #unzip -l ${{ inputs.zip }} *.dsf >> $GITHUB_STEP_SUMMARY
          echo "COMPLETED?: ${{ steps.rebuild.outputs.done }}" >> $GITHUB_STEP_SUMMARY
          TILENAME=${{ inputs.setname }} make -f Makefile.tiles ${{ inputs.zip }}.info >>  $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '---' >> $GITHUB_STEP_SUMMARY

      - name: Release
        if: steps.rebuild.outputs.done == 'true' && inputs.relname != ''
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ inputs.zip }}
            ${{ inputs.zip }}.sha256
          tag_name: ${{ inputs.relname }}

      - name: Failure
        if: steps.rebuild.outputs.done == 'false'
        run: |
          exit 1 
